!function(a){if("function"==typeof bootstrap)bootstrap("scopedcss",a);else if("object"==typeof exports)module.exports=a();else if("function"==typeof define&&define.amd)define(a);else if("undefined"!=typeof ses){if(!ses.ok())return;ses.makeScopedCss=a}else"undefined"!=typeof window?window.ScopedCss=a():global.ScopedCss=a()}(function(){return function(a,b,c){function d(c,f){if(!b[c]){if(!a[c]){var g="function"==typeof require&&require;if(!f&&g)return g(c,!0);if(e)return e(c,!0);throw new Error("Cannot find module '"+c+"'")}var h=b[c]={exports:{}};a[c][0].call(h.exports,function(b){var e=a[c][1][b];return d(e?e:b)},h,h.exports)}return b[c].exports}for(var e="function"==typeof require&&require,f=0;f<c.length;f++)d(c[f]);return d}({1:[function(a,b){!function(){var c=a("./styleSheet"),d=function(a,b,c){this.selectorPrefix=a,this.cssText=b,this.styleTag=c||document.createElement("style")};d.prototype.process=function(){var a=new c(this.styleTag),b=a.cssRules();b.forEach(function(a){a.applyPrefix(this.selectorPrefix)},this)},d.prototype.appendTo=function(a){this.styleTag.innerHTML=this.cssText,a.appendChild(this.styleTag),this.selectorPrefix&&this.cssText&&this.process()},d.defaultSelector=":not([data-scopedcss]) style[scoped]",d.applyTo=function(a){a=a||document.body;var b=document.querySelectorAll(this.defaultSelector);Array.prototype.slice.call(b).forEach(function(a){var b=(+new Date).toString(16);a.parentNode.setAttribute("data-scopedcss",b),new d("[data-scopedcss='"+b+"']",null,a).process()})},b.exports=d}()},{"./styleSheet":2}],2:[function(a,b){var c=a("./cssRule"),d=function(a){this.styleTag=a};d.prototype.getStyleSheet=function(){return this.styleTag.sheet},d.prototype.cssRules=function(){var a=Array.prototype.slice.call(this.getStyleSheet().cssRules);return a.map(function(a,b){return new c(a,b)},this)},b.exports=d},{"./cssRule":3}],3:[function(a,b){var c=function(a,b){this.rule=a,this.index=b};c.prototype.applyPrefix=function(a){var b=this.rule.selectorText,c=this.rule.parentStyleSheet,d=this.rule.cssText;this.rule.selectorText=a+" "+b,this.rule.selectorText===b&&(c.deleteRule(this.index),c.insertRule(a+" "+d,this.index))},b.exports=c},{}]},{},[1])});
/*
//@ sourceMappingURL=dist/scopedcss.js.map
*/